// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/ArmDump.h"
#include "Commands/ArmInitialize.h"
#include "Commands/ArmPickup.h"
#include "Commands/ArmSlew.h"
#include "Commands/ArmSlewNegative.h"
#include "Commands/ArmSlewPositive.h"
#include "Commands/ArmUpright.h"
#include "Commands/AutonomousBlendedMove.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/AutonomousMotionProfile.h"
#include "Commands/AutonomousVelocityProfile.h"
#include "Commands/IntakeClose.h"
#include "Commands/IntakeOpen.h"
#include "Commands/IntakeToggle.h"
#include "Commands/IntakeWhileHeld.h"
#include "Commands/IntakeWithLS.h"
#include "Commands/NoCommand.h"
#include "Commands/OuttakeWhileHeld.h"
#include "Commands/TeleopTankDrive.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    joystickOperator.reset(new frc::Joystick(2));
    
    joystickButtonBumperRight.reset(new frc::JoystickButton(joystickOperator.get(), 6));
    joystickButtonBumperRight->WhenPressed(new NoCommand());
    joystickButtonBumperLeft.reset(new frc::JoystickButton(joystickOperator.get(), 5));
    joystickButtonBumperLeft->WhenPressed(new NoCommand());
    joystickButtonY.reset(new frc::JoystickButton(joystickOperator.get(), 4));
    joystickButtonY->WhenPressed(new NoCommand());
    joystickButtonX.reset(new frc::JoystickButton(joystickOperator.get(), 3));
    joystickButtonX->WhenPressed(new IntakeToggle());
    joystickButtonB.reset(new frc::JoystickButton(joystickOperator.get(), 2));
    joystickButtonB->WhileHeld(new OuttakeWhileHeld());
    joystickButtonA.reset(new frc::JoystickButton(joystickOperator.get(), 1));
    joystickButtonA->WhileHeld(new IntakeWhileHeld());
    //joystickButtonA->WhileHeld(new IntakeWithLS());
    joystickDriverRight.reset(new frc::Joystick(1));
    
    joystickDriverLeft.reset(new frc::Joystick(0));
    

    // SmartDashboard Buttons
    frc::SmartDashboard::PutData("Autonomous Blended Move", new AutonomousBlendedMove());
    frc::SmartDashboard::PutData("NoCommand", new NoCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<frc::Joystick> OI::getJoystickDriverLeft() {
   return joystickDriverLeft;
}

std::shared_ptr<frc::Joystick> OI::getJoystickDriverRight() {
   return joystickDriverRight;
}

std::shared_ptr<frc::Joystick> OI::getJoystickOperator() {
   return joystickOperator;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
