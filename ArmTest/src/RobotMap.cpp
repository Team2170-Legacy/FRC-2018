// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
#include "ctre/Phoenix.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<WPI_TalonSRX> RobotMap::armarmMotor;
std::shared_ptr<frc::Encoder> RobotMap::armarmEncoder;
std::shared_ptr<frc::DigitalInput> RobotMap::armarmLimitSwitchFront;
std::shared_ptr<frc::DigitalInput> RobotMap::armarmLimitSwitchBack;
std::shared_ptr<frc::DigitalInput> RobotMap::armarmOpticalFlagSensor;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    frc::LiveWindow *lw = frc::LiveWindow::GetInstance();

    armarmMotor.reset(new WPI_TalonSRX(0));
    
    
    armarmEncoder.reset(new frc::Encoder(0, 1, false, frc::Encoder::k4X));
    lw->AddSensor("Arm", "armEncoder", armarmEncoder);
    armarmEncoder->SetDistancePerPulse(1.0);
    armarmEncoder->SetPIDSourceType(frc::PIDSourceType::kRate);
    armarmLimitSwitchFront.reset(new frc::DigitalInput(2));
    lw->AddSensor("Arm", "armLimitSwitchFront", armarmLimitSwitchFront);
    
    armarmLimitSwitchBack.reset(new frc::DigitalInput(3));
    lw->AddSensor("Arm", "armLimitSwitchBack", armarmLimitSwitchBack);
    
    armarmOpticalFlagSensor.reset(new frc::DigitalInput(4));
    lw->AddSensor("Arm", "armOpticalFlagSensor", armarmOpticalFlagSensor);
    

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
